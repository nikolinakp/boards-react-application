{"ast":null,"code":"var _jsxFileName = \"/Users/nikolinapetrova/react-app/project/src/Colors.js\",\n  _s = $RefreshSig$();\nimport './App.js';\nimport './App.css';\nimport { Menu } from './Menu.js';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultColor = 'gray';\nexport function Colors() {\n  _s();\n  const ref = useRef(null);\n  const [currentColor, setCurrentColor] = useState(defaultColor);\n  const handleMessage = event => {\n    let currentText = ref.current.value;\n    //currentSticky.text=currentText;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textAreaAdd\",\n      style: {\n        color: currentColor\n      },\n      ref: ref,\n      onChange: handleMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"gray\",\n        onClick: () => {\n          setCurrentColor('gray');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"yellow\",\n        onClick: () => {\n          setCurrentColor('yellow');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"blue\",\n        onClick: () => {\n          setCurrentColor('blue');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pink\" /*onClick={clickPink}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"purple\" /*onClick={clickPurple}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"green\" /* onClick={clickGreen}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Colors, \"Nsu5Hq/gp06oZbBGrMTD4vifVA8=\");\n_c = Colors;\nvar _c;\n$RefreshReg$(_c, \"Colors\");","map":{"version":3,"names":["Menu","useState","useRef","jsxDEV","_jsxDEV","defaultColor","Colors","_s","ref","currentColor","setCurrentColor","handleMessage","event","currentText","current","value","className","children","style","color","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/Users/nikolinapetrova/react-app/project/src/Colors.js"],"sourcesContent":["import './App.js';\nimport './App.css';\nimport {Menu} from './Menu.js';\nimport {useState} from 'react';\nimport {useRef} from 'react';\n\nvar defaultColor='gray';\n\nexport function Colors() {\n\n    const ref=useRef(null);\n    const[currentColor,setCurrentColor]=useState(defaultColor);\n\n    const handleMessage = event => {\n       let currentText=ref.current.value;\n        //currentSticky.text=currentText;\n    }\n\nreturn(\n    <div className='addComponent'>\n        <textarea className='textAreaAdd' style={{color: currentColor}} ref={ref} onChange={handleMessage}></textarea>\n        <div className='flexContainer2'>\n            <button id='gray' onClick={() => {setCurrentColor('gray')}} ></button>\n            <button id='yellow' onClick={() => {setCurrentColor('yellow')}}></button>\n            <button id='blue' onClick={() => {setCurrentColor('blue')}}></button>\n            <button id='pink' /*onClick={clickPink}*/></button>\n            <button id='purple' /*onClick={clickPurple}*/></button>\n            <button id='green'/* onClick={clickGreen}*/></button>\n      \n        </div>\n    </div>\n   \n);\n\n}"],"mappings":";;AAAA,OAAO,UAAU;AACjB,OAAO,WAAW;AAClB,SAAQA,IAAI,QAAO,WAAW;AAC9B,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,IAAIC,YAAY,GAAC,MAAM;AAEvB,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAMC,GAAG,GAACN,MAAM,CAAC,IAAI,CAAC;EACtB,MAAK,CAACO,YAAY,EAACC,eAAe,CAAC,GAACT,QAAQ,CAACI,YAAY,CAAC;EAE1D,MAAMM,aAAa,GAAGC,KAAK,IAAI;IAC5B,IAAIC,WAAW,GAACL,GAAG,CAACM,OAAO,CAACC,KAAK;IAChC;EACJ,CAAC;;EAEL,oBACIX,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBb,OAAA;MAAUY,SAAS,EAAC,aAAa;MAACE,KAAK,EAAE;QAACC,KAAK,EAAEV;MAAY,CAAE;MAACD,GAAG,EAAEA,GAAI;MAACY,QAAQ,EAAET;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC9GpB,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3Bb,OAAA;QAAQqB,EAAE,EAAC,MAAM;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAChB,eAAe,CAAC,MAAM,CAAC;QAAA;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eACtEpB,OAAA;QAAQqB,EAAE,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAChB,eAAe,CAAC,QAAQ,CAAC;QAAA;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACzEpB,OAAA;QAAQqB,EAAE,EAAC,MAAM;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAChB,eAAe,CAAC,MAAM,CAAC;QAAA;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACrEpB,OAAA;QAAQqB,EAAE,EAAC,MAAM,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,eACnDpB,OAAA;QAAQqB,EAAE,EAAC,QAAQ,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC,eACvDpB,OAAA;QAAQqB,EAAE,EAAC,OAAO;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAIV;AAACjB,EAAA,CA1BeD,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}