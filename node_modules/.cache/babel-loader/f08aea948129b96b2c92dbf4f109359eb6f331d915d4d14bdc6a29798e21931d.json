{"ast":null,"code":"var _jsxFileName = \"/Users/nikolinapetrova/react-app/project/src/Colors.js\",\n  _s = $RefreshSig$();\nimport './App.js';\nimport './App.css';\nimport { Menu } from './Menu.js';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultColor = 'gray';\nexport function Colors() {\n  _s();\n  const ref = useRef(null);\n  const handleMessage = event => {\n    let currentText = ref.current.value;\n    //currentSticky.text=currentText;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textAreaAdd\",\n      ref: ref,\n      onChange: handleMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"gray\" /*onClick={clickGray}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"yellow\" /*onClick={clickYellow}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"blue\" /*onClick={clickBlue}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pink\" /*onClick={clickPink}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"purple\" /*onClick={clickPurple}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"green\" /* onClick={clickGreen}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Colors, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n_c = Colors;\nvar _c;\n$RefreshReg$(_c, \"Colors\");","map":{"version":3,"names":["Menu","useState","useRef","jsxDEV","_jsxDEV","defaultColor","Colors","_s","ref","handleMessage","event","currentText","current","value","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/nikolinapetrova/react-app/project/src/Colors.js"],"sourcesContent":["import './App.js';\nimport './App.css';\nimport {Menu} from './Menu.js';\nimport {useState} from 'react';\nimport {useRef} from 'react';\n\nvar defaultColor='gray';\n\nexport function Colors() {\n\n    const ref=useRef(null);\n    \n    const handleMessage = event => {\n       let currentText=ref.current.value;\n        //currentSticky.text=currentText;\n    }\n\nreturn(\n    <div className='addComponent'>\n        <textarea className='textAreaAdd' ref={ref} onChange={handleMessage}></textarea>\n        <div className='flexContainer2'>\n            <button id='gray' /*onClick={clickGray}*/></button>\n            <button id='yellow' /*onClick={clickYellow}*/></button>\n            <button id='blue' /*onClick={clickBlue}*/></button>\n            <button id='pink' /*onClick={clickPink}*/></button>\n            <button id='purple' /*onClick={clickPurple}*/></button>\n            <button id='green'/* onClick={clickGreen}*/></button>\n      \n        </div>\n    </div>\n   \n);\n\n}"],"mappings":";;AAAA,OAAO,UAAU;AACjB,OAAO,WAAW;AAClB,SAAQA,IAAI,QAAO,WAAW;AAC9B,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,IAAIC,YAAY,GAAC,MAAM;AAEvB,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAMC,GAAG,GAACN,MAAM,CAAC,IAAI,CAAC;EAEtB,MAAMO,aAAa,GAAGC,KAAK,IAAI;IAC5B,IAAIC,WAAW,GAACH,GAAG,CAACI,OAAO,CAACC,KAAK;IAChC;EACJ,CAAC;;EAEL,oBACIT,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBX,OAAA;MAAUU,SAAS,EAAC,aAAa;MAACN,GAAG,EAAEA,GAAI;MAACQ,QAAQ,EAAEP;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAChFhB,OAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BX,OAAA;QAAQiB,EAAE,EAAC,MAAM,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,eACnDhB,OAAA;QAAQiB,EAAE,EAAC,QAAQ,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC,eACvDhB,OAAA;QAAQiB,EAAE,EAAC,MAAM,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,eACnDhB,OAAA;QAAQiB,EAAE,EAAC,MAAM,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,eACnDhB,OAAA;QAAQiB,EAAE,EAAC,QAAQ,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC,eACvDhB,OAAA;QAAQiB,EAAE,EAAC,OAAO;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAIV;AAACb,EAAA,CAzBeD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}